import React from 'react';

export interface Filters {
  city: string;
  category: string;
  format: string;
  experience: string;
  salary: string;
  search: string;
}

interface FilterPanelProps {
  filters: Filters;
  setFilters: (filters: Filters) => void;
  resultCount: number;
}

const FilterPanel: React.FC<FilterPanelProps> = ({ filters, setFilters, resultCount }) => {
  const handleFilterChange = (key: keyof Filters, value: string) => {
    setFilters({ ...filters, [key]: value });
  };

  const resetFilters = () => {
    setFilters({
      city: '',
      category: '',
      format: '',
      experience: '',
      salary: '',
      search: ''
    });
  };

  const cityOptions = ['–ê–ª–º–∞—Ç—ã', '–ê—Å—Ç–∞–Ω–∞', '–®—ã–º–∫–µ–Ω—Ç', '–ö–∞—Ä–∞–≥–∞–Ω–¥–∞', '–ê–∫—Ç–æ–±–µ', '–î—Ä—É–≥–æ–π'];
  const categoryOptions = ['IT', '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥', '–î–∏–∑–∞–π–Ω', '–§–∏–Ω–∞–Ω—Å—ã', '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ', 'HR', '–ú–µ–¥–∏—Ü–∏–Ω–∞', '–Æ—Ä–∏—Å–ø—Ä—É–¥–µ–Ω—Ü–∏—è', '–î—Ä—É–≥–æ–µ'];
  const formatOptions = ['–û—Ñ–∏—Å', '–û–Ω–ª–∞–π–Ω', '–ì–∏–±—Ä–∏–¥'];
  const experienceOptions = ['–ë–µ–∑ –æ–ø—ã—Ç–∞', '1-3 –≥–æ–¥–∞', '3-5 –ª–µ—Ç', '5+ –ª–µ—Ç'];
  const salaryRanges = [
    '–î–æ 200 000 —Ç–≥',
    '200 000 - 400 000 —Ç–≥',
    '400 000 - 600 000 —Ç–≥',
    '600 000 - 800 000 —Ç–≥',
    '800 000 - 1 000 000 —Ç–≥',
    '–ë–æ–ª–µ–µ 1 000 000 —Ç–≥'
  ];

  return (
    <div className="bg-white/10 p-6 rounded-xl mb-6 backdrop-blur-md shadow-lg">
      <div className="flex flex-wrap gap-4 mb-6">
        <div className="flex-1 min-w-[300px]">
          <input
            type="text"
            placeholder="üîç –ü–æ–∏—Å–∫ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º..."
            value={filters.search}
            onChange={(e) => handleFilterChange('search', e.target.value)}
            className="w-full bg-white/10 text-white px-4 py-3 rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500 transition-all"
          />
        </div>
      </div>

      <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 mb-6">
        <div>
          <label className="block text-sm font-medium text-gray-300 mb-2">
            üìç –ì–æ—Ä–æ–¥
          </label>
          <select
            value={filters.city}
            onChange={(e) => handleFilterChange('city', e.target.value)}
            className="w-full bg-white/10 text-white px-4 py-3 rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500 transition-all"
          >
            <option value="">–í—Å–µ –≥–æ—Ä–æ–¥–∞</option>
            {cityOptions.map(city => (
              <option key={city} value={city}>{city}</option>
            ))}
          </select>
        </div>

        <div>
          <label className="block text-sm font-medium text-gray-300 mb-2">
            üß† –ö–∞—Ç–µ–≥–æ—Ä–∏—è
          </label>
          <select
            value={filters.category}
            onChange={(e) => handleFilterChange('category', e.target.value)}
            className="w-full bg-white/10 text-white px-4 py-3 rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500 transition-all"
          >
            <option value="">–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</option>
            {categoryOptions.map(category => (
              <option key={category} value={category}>{category}</option>
            ))}
          </select>
        </div>

        <div>
          <label className="block text-sm font-medium text-gray-300 mb-2">
            üåê –§–æ—Ä–º–∞—Ç —Ä–∞–±–æ—Ç—ã
          </label>
          <select
            value={filters.format}
            onChange={(e) => handleFilterChange('format', e.target.value)}
            className="w-full bg-white/10 text-white px-4 py-3 rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500 transition-all"
          >
            <option value="">–í—Å–µ —Ñ–æ—Ä–º–∞—Ç—ã</option>
            {formatOptions.map(format => (
              <option key={format} value={format}>{format}</option>
            ))}
          </select>
        </div>

        <div>
          <label className="block text-sm font-medium text-gray-300 mb-2">
            üíº –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã
          </label>
          <select
            value={filters.experience}
            onChange={(e) => handleFilterChange('experience', e.target.value)}
            className="w-full bg-white/10 text-white px-4 py-3 rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500 transition-all"
          >
            <option value="">–õ—é–±–æ–π –æ–ø—ã—Ç</option>
            {experienceOptions.map(exp => (
              <option key={exp} value={exp}>{exp}</option>
            ))}
          </select>
        </div>

        <div>
          <label className="block text-sm font-medium text-gray-300 mb-2">
            üí∞ –ó–∞—Ä–ø–ª–∞—Ç–∞
          </label>
          <select
            value={filters.salary}
            onChange={(e) => handleFilterChange('salary', e.target.value)}
            className="w-full bg-white/10 text-white px-4 py-3 rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500 transition-all"
          >
            <option value="">–õ—é–±–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞</option>
            {salaryRanges.map(range => (
              <option key={range} value={range}>{range}</option>
            ))}
          </select>
        </div>
      </div>
      
      <div className="flex justify-between items-center">
        <div className="text-white">
          <span className="font-semibold">{resultCount}</span> {resultCount === 1 ? '–≤–∞–∫–∞–Ω—Å–∏—è' : '–≤–∞–∫–∞–Ω—Å–∏–π'} –Ω–∞–π–¥–µ–Ω–æ
        </div>
        
        {(filters.city || filters.category || filters.format || filters.experience || filters.salary || filters.search) && (
          <button
            onClick={resetFilters}
            className="bg-purple-600 hover:bg-purple-700 text-white px-4 py-2 rounded-lg transition-colors"
          >
            –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
          </button>
        )}
      </div>
    </div>
  );
};

export default FilterPanel; 